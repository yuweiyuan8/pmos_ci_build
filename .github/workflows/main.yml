name: Build rootfs and package

on:
  workflow_call:
    inputs:
      device:
        required: true
        type: string
      devicesrc:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      device:
        required: true
        type: string
      devicesrc:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Clean up disk space 
        run: |              
             df -h
             sudo rm -rf /usr/share/dotnet 
             sudo rm -rf /usr/local/lib/android 
             sudo rm -rf /opt/ghc 
             sudo rm -rf /opt/hostedtoolcache/CodeQL 
             sudo docker image prune --all --force
             sudo rm -rf /home/linuxbrew
             df -h
      - name: Setup pmbootstrap
        run: |
          git clone https://gitlab.com/postmarketOS/pmbootstrap --depth=1
          cd pmbootstrap
          chmod +x -v pmbootstrap.py

      - name: First Initialize pmbootstrap
        run: |
           yes '' | ./pmbootstrap/pmbootstrap.py --details-to-stdout init

      - name: Find package
        run: |
          if [ ! -d /home/runner/.local/var/pmbootstrap/cache_git/pmaports/device/testing/device-${{ inputs.device }} ]; then
              git clone ${{ inputs.devicesrc }} $HOME/tmp
              sudo mv -v $HOME/tmp/* /home/runner/.local/var/pmbootstrap/cache_git/pmaports/device/testing
              echo "file_changed=true" >> $GITHUB_ENV
          else
              echo "file_changed=false" >> $GITHUB_ENV
          fi

      - name: Initialize pmbootstrap with selected device
        run: |
           sudo aria2c https://github.com/sekaimoe/pmos_ci_build/raw/main/device/${{ inputs.device }}/pmbootstrap_v3.cfg
           sudo mv -v pmbootstrap_v3.cfg -v /home/runner/.config/pmbootstrap_v3.cfg
           sudo chmod 777 -v /home/runner/.config/pmbootstrap_v3.cfg
           yes '' | ./pmbootstrap/pmbootstrap.py --details-to-stdout init

      - name: Build linux package
        if: env.file_changed == 'true'
        run: |
          if [ -d /home/runner/.local/var/pmbootstrap/cache_git/pmaports/device/testing/device-${{ inputs.device }} ]; then
               ./pmbootstrap/pmbootstrap.py --details-to-stdout checksum linux-${{ inputs.device}}
               ./pmbootstrap/pmbootstrap.py --details-to-stdout build linux-${{ inputs.device}} --force
          fi

      - name: Build device package
        if: env.file_changed == 'true'
        run: |
           ./pmbootstrap/pmbootstrap.py --details-to-stdout checksum device-${{ inputs.device}}
           ./pmbootstrap/pmbootstrap.py --details-to-stdout build device-${{ inputs.device}} --force

      - name: Build firmware package
        if: env.file_changed == 'true'
        run: |
          if [ -d /home/runner/.local/var/pmbootstrap/cache_git/pmaports/device/testing/firmware-${{ inputs.device }} ]; then
              ./pmbootstrap/pmbootstrap.py --details-to-stdout checksum firmware-${{ inputs.device}}
              ./pmbootstrap/pmbootstrap.py  --details-to-stdout build firmware-${{ inputs.device}} --force
          fi

      - name: Build rootfs
        run: yes '123456' | ./pmbootstrap/pmbootstrap.py --details-to-stdout install --android-recovery-zip --recovery-install-partition=linux

      - name: Export rootfs
        if: github.event_name == 'workflow_dispatch'
        run: ./pmbootstrap/pmbootstrap.py --details-to-stdout export

      - name: Upload log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: /home/runner/.local/var/pmbootstrap/log.txt


      - name: Upload rootfs
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-${{ inputs.device }}
          path: /tmp/postmarketOS-export/*
